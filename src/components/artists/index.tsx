import React, { useState } from "react";
import RegisterModal from "../RegisterPage"; // Adjust path as needed
import LoginModal from "../LoginPage"; // Adjust path as needed

const Artists = () => {
  const [isRegisterModalOpen, setIsRegisterModalOpen] = useState(false);
  const [isLoginModalOpen, setIsLoginModalOpen] = useState(false);
  const token = localStorage.getItem("token");

  const handleOpenRegisterModal = () => {
    setIsLoginModalOpen(false);
    setIsRegisterModalOpen(true);
  };

  const handleCloseRegisterModal = () => {
    setIsRegisterModalOpen(false);
  };

  const handleOpenLoginModal = () => {
    setIsRegisterModalOpen(false);
    setIsLoginModalOpen(true);
  };

  const handleCloseLoginModal = () => {
    setIsLoginModalOpen(false);
  };

  const handleRegister = (token: string) => {
    console.log("Registered with token:", token);
    localStorage.setItem("token", token);
    setIsRegisterModalOpen(false);
    window.location.reload(); // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
  };

  const handleLogin = (token: string) => {
    console.log("Logged in with token:", token);
    localStorage.setItem("token", token);
    setIsLoginModalOpen(false);
  };

  return (
    <div className="bg-[#080217] min-h-screen w-full overflow-hidden px-[70px] py-[40px]">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü—ñ—ó */}
      <div className="mb-[32px]">
        <div className="flex items-center gap-[8px] mb-[16px]">
          <h1 className="text-[#e6dfe7] text-[30px] font-medium font-['Skema_Pro_Omni'] leading-[38px]">
            –ú–∏—Ç—Ü—è–º
          </h1>
        </div>
        <div className="w-full h-[1px] bg-[#e6dfe7]" />
      </div>

      {/* –í–µ—Ä—Ö–Ω—ñ–π –±–ª–æ–∫ –∑ —Ç–µ–∫—Å—Ç–æ–º —Ç–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º */}
      <div className="flex flex-col lg:flex-row justify-between items-center gap-[32px] mb-[64px]">
        {/* –¢–µ–∫—Å—Ç–æ–≤–∞ —á–∞—Å—Ç–∏–Ω–∞ */}
        <div className="flex-1 flex items-center h-full">
          <div className="mb-[32px] lg:mb-[0px]">
            <h2 className="text-[#e6dfe7] text-[42px] font-medium font-['Skema_Pro_Omni'] leading-[50px] mb-[16px]">
              –í–∏ —Å—Ç–≤–æ—Ä—é—î—Ç–µ –º–∏—Å—Ç–µ—Ü—Ç–≤–æ ‚Äî
              <span className="block text-[30px] mt-[16px]">
                ArtUA –¥–æ–ø–æ–º–∞–≥–∞—î –∑–Ω–∞–π—Ç–∏ —Ç–∏—Ö, —Ö—Ç–æ –π–æ–≥–æ —Ü—ñ–Ω—É—î
              </span>
            </h2>
            <p className="text-[#e6dfe7] text-[30px] font-medium font-['Skema_Pro_Omni'] leading-[38px]">
              –ù—ñ—è–∫–∏—Ö –ø–æ—Å–µ—Ä–µ–¥–Ω–∏–∫—ñ–≤, –∫–æ–º—ñ—Å—ñ–π —á–∏ —Å–∫–ª–∞–¥–Ω–∏—Ö —Å—Ö–µ–º. –ü—Ä–æ—Å—Ç–æ –≤–∏, –≤–∞—à—ñ —Ä–æ–±–æ—Ç–∏
              —Ç–∞ –ø—Ä—è–º–∏–π –∑–≤'—è–∑–æ–∫ —ñ–∑ –ø–æ–∫—É–ø—Ü—è–º–∏.
            </p>
          </div>
        </div>

        {/* –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è */}
        <img 
          src="https://cdn.builder.io/api/v1/image/assets/TEMP/315499bcc2f2dbce4a7a8b9811bbe6e4bbb8d97c" 
          alt="ArtUA" 
          className="lg:w-[624px] lg:h-[624px] w-full h-auto rounded-[8px] self-center" 
        />
      </div>

      {/* –°–µ–∫—Ü—ñ—ó –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É */}
      <div className="w-full max-w-screen-2xl mx-auto space-y-[0px]">
        <SectionBlock 
          title="–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?"
          content={[
            "–í–∏ –¥–æ–¥–∞—î—Ç–µ —Å–≤–æ—ó —Ä–æ–±–æ—Ç–∏ ‚Äî –∫–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å, —Ñ–æ—Ç–æ, —Ä–æ–∑–º—ñ—Ä, —Ç–µ—Ö–Ω—ñ–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è",
            "–ü–æ–∫—É–ø—Ü—ñ –∑–Ω–∞—Ö–æ–¥—è—Ç—å –≤–∞—Å ‚Äî –∑–∞ —Å—Ç–∏–ª–µ–º, –∂–∞–Ω—Ä–æ–º –∞–±–æ –ø—Ä–æ—Å—Ç–æ –∑–∞–∫–æ—Ö—É—é—Ç—å—Å—è —É –≤–∞—à—É –∫–∞—Ä—Ç–∏–Ω—É",
            "–°–ø—ñ–ª–∫—É—î—Ç–µ—Å—å –Ω–∞–ø—Ä—è–º—É ‚Äî –æ–±–≥–æ–≤–æ—Ä—é—î—Ç–µ –¥–µ—Ç–∞–ª—ñ –ø—Ä–æ–¥–∞–∂—É, –æ–ø–ª–∞—Ç—É —Ç–∞ –ø–µ—Ä–µ–¥–∞—á—É —Ç–≤–æ—Ä—É",
            "–¢–≤–æ—Ä–∏—Ç–µ –¥–∞–ª—ñ ‚Äî –±–µ–∑ –æ–±–º–µ–∂–µ–Ω—å, –∑–∞–π–≤–∏—Ö –≤–∏—Ç—Ä–∞—Ç —ñ –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –ª—é–¥–µ–π, —è–∫—ñ —Ü—ñ–Ω—É—é—Ç—å –≤–∞—à–µ –º–∏—Å—Ç–µ—Ü—Ç–≤–æ"
          ]}
          icons={["üîπ", "üîπ", "üîπ", "üîπ"]}
        />

        <SectionBlock 
          title="–ß–æ–º—É ArtUA?"
          content={[
            "–í—ñ–ª—å–Ω–∏–π –ø—Ä–æ—Å—Ç—ñ—Ä –¥–ª—è –º–∏—Ç—Ü—ñ–≤ ‚Äî –≤–∏ —Å–∞–º—ñ –≤–∏—Ä—ñ—à—É—î—Ç–µ, —â–æ —Ç–∞ —è–∫ –ø—Ä–æ–¥–∞–≤–∞—Ç–∏",
            "–ñ–æ–¥–Ω–∏—Ö –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏—Ö –∫–æ–º—ñ—Å—ñ–π ‚Äî —É—Å—ñ —É–≥–æ–¥–∏ –Ω–∞–ø—Ä—è–º—É –º—ñ–∂ –≤–∞–º–∏ —Ç–∞ –ø–æ–∫—É–ø—Ü–µ–º",
            "–í–∞—à–∞ —Ç–≤–æ—Ä—á—ñ—Å—Ç—å —É —Ü–µ–Ω—Ç—Ä—ñ —É–≤–∞–≥–∏ ‚Äî –±—ñ–ª—å—à–µ —à–∞–Ω—Å—ñ–≤ –∑–Ω–∞–π—Ç–∏ —Å–≤–æ–≥–æ –ø–æ—Ü—ñ–Ω–æ–≤—É–≤–∞—á–∞"
          ]}
          icons={["‚ú®", "‚ú®", "‚ú®"]}
        />
      </div>

      {/* –§—ñ–Ω–∞–ª—å–Ω–∏–π –±–ª–æ–∫ */}
      <div className="w-full max-w-screen-2xl mx-auto my-[64px]">
        <p className="text-[#e6dfe7] text-[24px] font-normal font-['Gotham'] leading-[36px] mb-[32px]">
          –ì–æ—Ç–æ–≤—ñ –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è —Å–≤–æ—ó–º –º–∏—Å—Ç–µ—Ü—Ç–≤–æ–º –∑—ñ —Å–≤—ñ—Ç–æ–º?
        </p>
        <p className="text-[#e6dfe7] text-[30px] font-medium font-['Skema_Pro_Omni'] leading-[38px]">
          –î–æ–ª—É—á–∞–π—Ç–µ—Å—è –¥–æ ArtUA —Ç–∞ —Å—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç–∏–Ω–æ—é —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –∞—Ä—Ç-—Å–ø—ñ–ª—å–Ω–æ—Ç–∏!
        </p>
      </div>

      {/* CTA –ë–ª–æ–∫ (display only if not registered) */}
      {!token && (
        <div className="w-full max-w-screen-2xl mx-auto bg-[#ff7086] rounded-[8px] p-[64px]">
          <div className="flex flex-col lg:flex-row justify-between items-center gap-[32px]">
            <div className="flex-1">
              <h3 className="text-[#080217] text-[30px] font-medium font-['Skema_Pro_Omni'] leading-[38px] mb-[16px]">
                –ü—ñ–¥—Ç—Ä–∏–º—É–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–µ –º–∏—Å—Ç–µ—Ü—Ç–≤–æ!
              </h3>
              <p className="text-black text-[20px] font-normal font-['Gotham'] leading-[28px]">
                –ù–∞—à–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –æ–±'—î–¥–Ω—É—î —Ç–≤–æ—Ä—á–∏—Ö –ª—é–¥–µ–π, —è–∫—ñ –Ω–µ—Å—É—Ç—å —É–∫—Ä–∞—ó–Ω—Å—å–∫—É –∫—É–ª—å—Ç—É—Ä—É —É —Å–≤—ñ—Ç. 
                –ü—ñ–¥—Ç—Ä–∏–º–∞–π—Ç–µ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –º–∏—Ç—Ü—ñ–≤ —Ç–∞ –¥–æ–ª—É—á–∞–π—Ç–µ—Å—è –¥–æ –Ω–∞—à–æ—ó —Å–ø—ñ–ª—å–Ω–æ—Ç–∏, —â–æ–± –¥–æ–ø–æ–º–æ–≥—Ç–∏ 
                –º–∏—Å—Ç–µ—Ü—Ç–≤—É —Ä–æ–∑–≤–∏–≤–∞—Ç–∏—Å—è –ø–æ–ø—Ä–∏ –≤—Å—ñ –ø–µ—Ä–µ—à–∫–æ–¥–∏.
              </p>
            </div>
            <button 
              className="bg-[#080217] text-[#e6dfe7] px-[24px] py-[12px] rounded-[6px] text-[18px] font-normal hover:opacity-90 transition-opacity"
              onClick={handleOpenRegisterModal}
            >
              –ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –∑–∞—Ä–∞–∑
            </button>
          </div>
        </div>
      )}

      {/* RegisterModal */}
      <RegisterModal
        isOpen={isRegisterModalOpen}
        onClose={handleCloseRegisterModal}
        onRegister={handleRegister}
        openLoginModal={handleOpenLoginModal}
      />

      {/* LoginModal */}
      <LoginModal
        isOpen={isLoginModalOpen}
        onClose={handleCloseLoginModal}
        onLogin={handleLogin}
        openRegisterModal={handleOpenRegisterModal}
      />
    </div>
  );
};

// –î–æ–ø–æ–º—ñ–∂–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Å–µ–∫—Ü—ñ–π –∑ —ñ–∫–æ–Ω–∫–∞–º–∏
const SectionBlock: React.FC<{ 
  title: string; 
  content: string | string[];
  icons?: string[]; 
}> = ({ title, content, icons }) => (
  <div className="w-full bg-[#080217] p-[32px] rounded-[12px] mb-[32px]">
    <h3 className="text-[#e6dfe7] text-[24px] font-normal font-['Gotham'] leading-[36px] mb-[16px]">
      {title}
    </h3>
    {Array.isArray(content) ? (
      <ul className="space-y-[12px]">
        {content.map((item, index) => (
          <li 
            key={index} 
            className="text-[#bc98c8] text-[18px] font-normal font-['Gotham'] leading-[28px] flex items-start"
          >
            {icons && icons[index] && (
              <span className="mr-[8px] mt-[2px]">{icons[index]}</span>
            )}
            {item}
          </li>
        ))}
      </ul>
    ) : (
      <p className="text-[#bc98c8] text-[18px] font-normal font-['Gotham'] leading-[28px]">
        {content}
      </p>
    )}
  </div>
);

export default Artists;